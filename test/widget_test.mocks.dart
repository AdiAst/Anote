// Mocks generated by Mockito 5.4.4 from annotations
// in anote/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:anote/database/catatan_db.dart' as _i3;
import 'package:anote/model/model_catatan.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:sqflite/sqflite.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeModelCatatan_0 extends _i1.SmartFake implements _i2.ModelCatatan {
  _FakeModelCatatan_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CatatanDB].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatatanDB extends _i1.Mock implements _i3.CatatanDB {
  MockCatatanDB() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get nama_tabel => (super.noSuchMethod(
        Invocation.getter(#nama_tabel),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#nama_tabel),
        ),
      ) as String);

  @override
  _i5.Future<void> create(_i6.Database? database) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [database],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> insert({
    required String? judul,
    required String? isi,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [],
          {
            #judul: judul,
            #isi: isi,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<_i2.ModelCatatan>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i5.Future<List<_i2.ModelCatatan>>.value(<_i2.ModelCatatan>[]),
      ) as _i5.Future<List<_i2.ModelCatatan>>);

  @override
  _i5.Future<_i2.ModelCatatan> getById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i5.Future<_i2.ModelCatatan>.value(_FakeModelCatatan_0(
          this,
          Invocation.method(
            #getById,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.ModelCatatan>);

  @override
  _i5.Future<int> update({
    required int? id,
    String? judul,
    String? isi,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [],
          {
            #id: id,
            #judul: judul,
            #isi: isi,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> delete(int? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
